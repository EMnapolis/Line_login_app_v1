# pages/Call_Recording_Upload.py
import streamlit as st
import pandas as pd
from datetime import datetime, date, timedelta
import os
from call_upload_utils import (
    fetch_json, process_records, load_sent_rec_ids_db,
    download_recording, upload_file_to_asb,
    create_chat_room, json_helper, save_sent_rec_id_db, log_failed
)
from utility import *

CHAT_TOKEN_VL = os.getenv("CHAT_TOKEN") or "Empty" #Set ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ chat_token_vl

DB_FILE = os.path.join("data", "sqdata.db")
def get_connection():
    return sqlite3.connect(DB_FILE)

# ----------------------------
# ‚öôÔ∏è Debug Mode Configuration
# ----------------------------
DEBUG = os.getenv("DEBUG", "0") == "1"

if DEBUG:
    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ session ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ mock ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    if "user_id" not in st.session_state:
        st.session_state["user_id"] = "Udebug123456"
        st.session_state["displayName"] = "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö TEST"
        st.session_state["pictureUrl"] = "https://i.imgur.com/1Q9Z1Zm.png"
        st.session_state["status"] = "APPROVED"
        st.info("üîß Loaded mock user session for debugging.")


#def render_page():
st.page_link("app.py", label="‚¨ÖÔ∏è ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å", icon="üè†")
st.title("üéôÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö Call Recording Upload")
#---------------
# ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à login ‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
if "user_id" not in st.session_state or st.session_state.get("status") != "APPROVED":
    st.error("üö´ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö ‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥")
    st.stop()
#---------------

# Left Pane Menu
menu = st.sidebar.radio("‡πÄ‡∏°‡∏ô‡∏π", ["‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°", "‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"])

if menu == "‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô":
    #st.title("VillaMarket Call Recording Processor")

    tmp_token = st.text_input("3CX Temporary Access Token (tmp_token)",
                              value="", type="password",
                              help="‡∏Å‡∏£‡∏≠‡∏Å tmp_token ‡∏à‡∏≤‡∏Å 3CX Dashboard (‡∏î‡∏π‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ô '‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô')")

    # st.markdown("<small><b>ChatCenter Access Token (chat_token)</b></small>", unsafe_allow_html=True)
    with st.expander("üîê ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Chat Token ‡πÅ‡∏•‡∏∞ Contact ID", expanded=False):
        chat_token = st.text_input("ChatCenter Access Token (chat_token)",
                                   value = CHAT_TOKEN_VL,type="password",
                                   help="‡∏Å‡∏£‡∏≠‡∏Å chat_token ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å https://cc-stg.villa-marketjp.com")
        contact_id = st.number_input("Contact ID", value=3)
    col1, col2, col3 = st.columns([1,3,4]) # ‡πÅ‡∏ö‡πà‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• 
    with col1:
        # --- üîÅ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà: Clear session state ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ---
        if st.button("üîÅ **‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà**"):
            for key in ["ready_to_process", "processed", "df_new", "processed_df"]:
                st.session_state.pop(key, None)
            st.rerun()
    with col2:
        mode = st.radio("**‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô**", ["‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà", "‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏à‡∏≤‡∏Å recId ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á"])
    with col3:
        st.markdown("""
    1Ô∏è‚É£ **‡∏Å‡∏£‡∏≠‡∏Å Token ‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•**  
    2Ô∏è‚É£ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° üì• **‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON ‡∏à‡∏≤‡∏Å 3CX**  
    3Ô∏è‚É£ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° üöÄ **‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà**
        """)

    if mode == "‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà":

        # ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î
        before_date = date.today() - timedelta(days=1)
        default_date = date.today()
        col1, col2 = st.columns(2)  # ‡πÅ‡∏ö‡πà‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏π‡πà
        with col1:
            from_date = st.date_input("From Date", value=before_date) # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        with col2:
            to_date = st.date_input("To Date", value=default_date)  # ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î

        # ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏±‡πà‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON ‡∏à‡∏≤‡∏Å 3CX
        if st.button("üì• ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON ‡∏à‡∏≤‡∏Å 3CX"):
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ token ‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if not tmp_token or not chat_token:
                st.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ó‡∏±‡πâ‡∏á tmp_token ‡πÅ‡∏•‡∏∞ chat_token")
            else:
                # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô fetch_json ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON ‡∏à‡∏≤‡∏Å API ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ tmp_token ‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
                with st.spinner("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON ‡∏à‡∏≤‡∏Å 3CX..."):
                    json_data = fetch_json(tmp_token, from_date, to_date) # ‡∏î‡∏∂‡∏á JSON ‡∏à‡∏≤‡∏Å 3CX
                    df = pd.json_normalize(json_data.get("value", [])) # ‡πÅ‡∏õ‡∏•‡∏á JSON ‡πÄ‡∏õ‡πá‡∏ô DataFrame

                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏°‡∏±‡πâ‡∏¢ ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                if df.empty:
                    st.warning("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å 3CX API ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")
                else:
                    total_count = len(df) # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏≤
                    sent_ids = load_sent_rec_ids_db() # ‡πÇ‡∏´‡∏•‡∏î recId ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
                    df["Id"] = df["Id"].astype(str) # ‡πÅ‡∏õ‡∏•‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô string ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö
                    df_new = df[~df["Id"].isin(sent_ids)] # ‡∏Å‡∏£‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏™‡πà‡∏á
                    new_count = len(df_new) # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏™‡πà‡∏á
                    old_count = total_count - new_count # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß

                    # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ß‡πâ‡πÉ‡∏ô session ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏≥‡πÑ‡∏õ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
                    st.session_state["df_new"] = df_new
                    st.session_state["ready_to_process"] = new_count > 0

                    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ß‡πà‡∏≤‡πÄ‡∏à‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡∏µ‡πà‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏Å‡∏µ‡πà‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏™‡πà‡∏á
                    st.info(f"üî¢ ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ | ‚úÖ ‡πÄ‡∏Ñ‡∏¢‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß: {old_count} | üÜï ‡∏£‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•: {new_count}")

    elif mode == "‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏à‡∏≤‡∏Å recId ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á":
        rec_id = st.text_input("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà recId")
        if st.button("üöÄ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≤‡∏Å recId"):
            if not tmp_token or not chat_token:
                st.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏ó‡∏±‡πâ‡∏á tmp_token ‡πÅ‡∏•‡∏∞ chat_token")
            elif not rec_id:
                st.error("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà recId")
            else:
                # ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ rec_id ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏ã‡πâ‡∏≥
                sent_ids = load_sent_rec_ids_db()
                if rec_id in sent_ids:
                    st.info("‚úÖ recId ‡∏ô‡∏µ‡πâ‡πÄ‡∏Ñ‡∏¢‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")
                else:
                    df_new = pd.DataFrame([{"Id": rec_id}])
                    st.session_state["df_new"] = df_new
                    st.session_state["ready_to_process"] = True
                    st.success("üéØ ‡∏û‡∏ö recId ‡πÅ‡∏•‡∏∞‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•")


# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ session_state ‡∏°‡∏µ‡∏Ñ‡∏µ‡∏¢‡πå "ready_to_process" ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏∑‡∏≠ True ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•)
if st.session_state.get("ready_to_process") and not st.session_state.get("processed"): #‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç and ‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏•‡∏¥‡∏µ‡∏Å‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏∞‡πÑ‡∏£
    df_new = st.session_state["df_new"]  # ‡∏î‡∏∂‡∏á DataFrame ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏à‡∏≤‡∏Å session
    # st.info(f"üì¶ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• {len(df_new)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà")   # ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•

    # ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
    if st.button("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà"):
        # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô process_records ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ df_new ‡πÅ‡∏•‡∏∞ token ‡∏ï‡πà‡∏≤‡∏á ‡πÜ
        processed_df = process_records(df_new, tmp_token, chat_token, contact_id)
        st.session_state["processed"] = True   # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß
        st.session_state["processed_df"] = processed_df
        st.rerun()  # üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ã‡πà‡∏≠‡∏ô‡∏õ‡∏∏‡πà‡∏°  ‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ó‡πå‡πÑ‡∏ß‡πâ ‡∏Å‡πà‡∏≠‡∏ô


# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö CSV ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à
if st.session_state.get("processed"):
    st.success("üéâ ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô")
    st.download_button(
        label="üì• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏õ‡πá‡∏ô CSV",     # ‡∏õ‡πâ‡∏≤‡∏¢‡∏õ‡∏∏‡πà‡∏°
        data=st.session_state["processed_df"].to_csv(index=False),    # ‡πÅ‡∏õ‡∏•‡∏á DataFrame ‡πÄ‡∏õ‡πá‡∏ô CSV
        file_name="processed_results.csv",  # ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
        mime="text/csv"                     # ‡∏£‡∏∞‡∏ö‡∏∏ MIME type ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå CSV
    )

elif menu == "‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°":
    st.header("‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
    st.markdown("""
    - ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å API 3CX ‡∏ï‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
    - ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
    - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤ ChatCenter
    - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å `recId`

    ### üîë Token ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å
    - `tmp_token` (‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö API 3CX)
    - `chat_token` (‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö ChatCenter)
    - `contact_id` (‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö Upload ‡πÅ‡∏•‡∏∞ CreateRoom)

    ### üîÅ Workflow ‡∏™‡∏£‡∏∏‡∏õ (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å JSON)
    - ‡∏Å‡∏£‡∏≠‡∏Å `tmp_token`, `chat_token`, `contact_id`, ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°/‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î
    - ‡∏î‡∏∂‡∏á JSON ‡∏î‡πâ‡∏ß‡∏¢ curl API ‡∏à‡∏≤‡∏Å 3CX ‡∏ï‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤
    - ‡πÇ‡∏´‡∏•‡∏î JSON ‚Üí DataFrame ‚Üí ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ recId ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏™‡πà‡∏á
    - ‡∏ß‡∏ô‡∏•‡∏π‡∏õ: ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á, ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î, ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≠‡∏á, ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å recId ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏™‡πà `sent_records.csv`

    ### üìÅ ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå
    ```
    üìÅ project-root/
    ‚îú‚îÄ‚îÄ main.py                ‚Üê Streamlit app
    ‚îú‚îÄ‚îÄ utils.py               ‚Üê ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å API
    ‚îú‚îÄ‚îÄ logs/
    ‚îÇ   ‚îú‚îÄ‚îÄ sent_records.csv   ‚Üê ‡πÄ‡∏Å‡πá‡∏ö recId ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
    ‚îÇ   ‚îî‚îÄ‚îÄ errors.csv         ‚Üê ‡πÄ‡∏Å‡πá‡∏ö recId ‡∏ó‡∏µ‡πà error (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    ‚îú‚îÄ‚îÄ tmp/
    ‚îÇ   ‚îî‚îÄ‚îÄ *.wav              ‚Üê ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
    ```
    """)

elif menu == "‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô":
    st.header("üìò ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á 3CX")

    st.subheader("‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
    st.markdown("""
    1Ô∏è‚É£ **‡∏Å‡∏£‡∏≠‡∏Å Token ‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•**  
    2Ô∏è‚É£ ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° üì• **‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• JSON ‡∏à‡∏≤‡∏Å 3CX**  
    3Ô∏è‚É£ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•:  
    > ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: `185` ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ | ‡πÄ‡∏Ñ‡∏¢‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß: `184` | ‡∏£‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•: `1`

    4Ô∏è‚É£ ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ "‡∏£‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•" ‡πÉ‡∏´‡πâ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° üöÄ **‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà**  
    5Ô∏è‚É£ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà ChatCenter ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥  
    6Ô∏è‚É£ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏õ‡πá‡∏ô CSV ‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
    """)

    st.subheader("üõ† ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤: Invalid JSON returned! Status: 401")
    st.markdown("""
    ‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° **Exception: Invalid JSON returned! Status: 401** ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤ token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á  
    ‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:

    1. ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö [3CX Dashboard](https://villamarket.3cx.co/#/office/dashboard) ‡πÅ‡∏•‡∏∞ Login  
    2. ‡∏Å‡∏î `F12` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î Developer Tools ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ó‡πá‡∏ö **Network**  
    3. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏°‡∏ô‡∏π **Recordings** [‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà](https://villamarket.3cx.co/#/office/recordings)  
    4. ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏Ç‡∏≠ (Request) ‡πÉ‡∏î‡πÜ ‡πÉ‡∏ô‡πÅ‡∏ó‡πá‡∏ö Network > ‡πÑ‡∏õ‡∏ó‡∏µ‡πà **Headers**  
    5. ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ `authorization: Bearer` ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ **token ‡∏ó‡∏µ‡πà‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ `ey...`**  
    6. ‡∏ô‡∏≥ token ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÑ‡∏õ‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á `tmp_token` ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
    """)

    st.info("üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö: Token ‡∏°‡∏µ‡∏≠‡∏≤‡∏¢‡∏∏‡∏à‡∏≥‡∏Å‡∏±‡∏î ‡∏´‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á Error ‡πÉ‡∏´‡πâ‡∏î‡∏∂‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏≤‡∏°‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏ï‡πâ‡∏ô")

    """)



# Footer ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏î
st.markdown("""
    <hr style='margin-top: 3rem;'>
    <div style='text-align: center; color: gray;'>
        Provide ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ‡∏ß‡∏¥‡∏•‡∏•‡πà‡∏≤ ‡∏°‡∏≤‡∏£‡πå‡πÄ‡∏Å‡πá‡∏ï‡πÄ‡∏à‡∏û‡∏µ ‡πÇ‡∏î‡∏¢‡∏¢‡∏π‡∏ô‡∏¥‡∏Ñ‡∏≠‡∏£‡πå‡∏ô ‡πÄ‡∏ó‡∏Ñ ‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡∏¥‡πÄ‡∏Å‡∏£‡∏ä‡∏±‡πà‡∏ô
    </div>
""", unsafe_allow_html=True)




