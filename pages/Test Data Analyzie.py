import streamlit as st
import pandas as pd
import plotly.express as px
from openai import OpenAI
from config import OPENAI_API_KEY, CHAT_TOKEN
import plotly.io as pio
from io import BytesIO


# ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API (‡πÉ‡∏™‡πà key ‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô OPENAI_API_KEY)
client = OpenAI(api_key=OPENAI_API_KEY)

st.set_page_config(page_title="üìä ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô", layout="wide")
st.title("üìà ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏° + ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó (Grouped Bar Chart)")

uploaded_file = st.file_uploader("üìÅ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå .csv ‡∏´‡∏£‡∏∑‡∏≠ .xlsx", type=["csv", "xlsx"])

if uploaded_file:
    if uploaded_file.name.endswith(".csv"):
        df = pd.read_csv(uploaded_file)
    else:
        df = pd.read_excel(uploaded_file)

    st.subheader("üßæ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå")
    st.dataframe(df)

    text_cols = df.select_dtypes(include="object").columns.tolist()

    if len(text_cols) < 2:
        st.error("‚ùå ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 2 ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå")
    else:
        group_col = st.selectbox("üìã ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏´‡∏•‡∏±‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏° (‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏≤‡∏Ç‡∏≤)", text_cols)
        category_col = st.selectbox(
            "üè∑Ô∏è ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÄ‡∏ä‡πà‡∏ô ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô)", text_cols, index=1
        )

        if group_col and category_col:
            grouped_df = (
                df[[group_col, category_col]]
                .dropna()
                .groupby([group_col, category_col])
                .size()
                .reset_index(name="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô")
            )

            fig = px.bar(
                grouped_df,
                x=group_col,
                y="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô",
                color=category_col,
                barmode="group",
                text="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô",
                title=f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô '{category_col}' ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞ '{group_col}'",
                height=500,
            )

            fig.update_layout(xaxis_title=group_col, yaxis_title="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô")
            st.subheader("üìä ‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÅ‡∏ö‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°")
            st.plotly_chart(fig, use_container_width=True)

            # üîΩ ‡πÅ‡∏õ‡∏•‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏û PNG
            img_bytes = BytesIO()
            pio.write_image(fig, img_bytes, format="png", width=1000, height=600, scale=2)
            img_bytes.seek(0)
            # üîò ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
            st.download_button(
                label="üíæ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡πÄ‡∏õ‡πá‡∏ô PNG",
                data=img_bytes,
                file_name="grouped_bar_chart.png",
                mime="image/png"
            )
            
            # ‚úÖ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏î‡πâ‡∏ß‡∏¢ AI
            if st.button("üîç ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏ß‡∏¢ AI"):
                with st.spinner("ü§ñ AI ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•..."):

                    prompt = f"""‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {category_col} ‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞ {group_col}:
{grouped_df.to_string(index=False)}

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ‡πÇ‡∏î‡∏¢‡∏™‡∏£‡∏∏‡∏õ:
- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏´‡∏ô‡πÇ‡∏î‡∏î‡πÄ‡∏î‡πà‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏≠‡∏∑‡πà‡∏ô
- ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÉ‡∏î‡∏ñ‡∏π‡∏Å‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏ñ‡∏∂‡∏á‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏°
- ‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à
- ‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡πÅ‡∏ô‡∏∞‡πÄ‡∏ä‡∏¥‡∏á‡∏Å‡∏•‡∏¢‡∏∏‡∏ó‡∏ò‡πå"""

                    response = client.chat.completions.create(
                        model="gpt-4", messages=[{"role": "user", "content": prompt}]
                    )
                    ai_result = response.choices[0].message.content
                    st.markdown("### ü§ñ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏î‡∏¢ AI")
                    st.success(ai_result)
                    

