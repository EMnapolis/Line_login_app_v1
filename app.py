# app.py
# =============================
import streamlit as st
import os
import sqlite3
import pandas as pd
from urllib.parse import parse_qs, urlparse, unquote, urlencode
from config import CHANNEL_ID, CHANNEL_SECRET, REDIRECT_URI, STATE
from line_api import get_token, get_profile, send_message_to_user
from access_manager import (
    #read_access_log, write_or_update_user, get_approvers, update_user_status,
    read_access_log_db, write_or_update_user_db, get_approvers_db, update_user_status_db
)

DB_FILE = os.path.join("data", "sqdata.db")
SCHEMA_FILE = os.path.join("data", "schema.sql")


st.set_page_config(page_title="Line Login App", page_icon="‚úÖ")
st.markdown("<style>footer {visibility: hidden;}</style>", unsafe_allow_html=True)

st.title("üìã ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å")
#st.page_link("pages/Call_Recording_Upload.py", label="üéôÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö Call Recording Upload")

# ----------------------------
# ‚úÖ ‡∏≠‡πà‡∏≤‡∏ô code ‡∏à‡∏≤‡∏Å query string ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ st.query_params ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
# ----------------------------
code = ""

if "code" in st.query_params:
    code = st.query_params["code"]
    #st.write("üßæ code:", code)

elif "liff.state" in st.query_params:
    try:
        raw = st.query_params["liff.state"]
        decoded = unquote(raw)
        parsed = parse_qs(urlparse(decoded).query)
        code = parsed.get("code", [""])[0]
        st.write("üßæ code (from liff.state):", code)
    except Exception as e:
        st.error(f"‚ùå ‡∏î‡∏∂‡∏á code ‡∏à‡∏≤‡∏Å liff.state ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")

# ----------------------------
# ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
# ----------------------------
if "user_id" not in st.session_state and code:
    token_data = get_token(code, REDIRECT_URI, CHANNEL_ID, CHANNEL_SECRET)
    access_token = token_data.get("access_token")

    if not access_token:
        st.error("‚ùå ‡∏î‡∏∂‡∏á access_token ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
    else:
        profile = get_profile(access_token)
        user_id = profile.get("userId", "")
        display_name = profile.get("displayName", "")
        picture_url = profile.get("pictureUrl", "")

        if user_id:
            try:
                users = read_access_log_db()
                user_info = users.get(user_id)

                if user_info is None:
                    # üî∞ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà ‚Üí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏î‡πâ‡∏ß‡∏¢ status = PENDING
                    write_or_update_user_db(user_id, display_name, picture_url, status="PENDING")
                    user_status = "PENDING"
                else:
                    # üü¢ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏î‡∏¥‡∏° ‚Üí ‡∏î‡∏∂‡∏á status ‡πÄ‡∏î‡∏¥‡∏°
                    user_status = user_info.get("status")
                    # ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ä‡∏∑‡πà‡∏≠/‡∏£‡∏π‡∏õ (‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô) ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÅ‡∏ï‡∏∞ status
                    write_or_update_user_db(user_id, display_name, picture_url, status=user_status)

                st.session_state["user_id"] = user_id
                st.session_state["display_name"] = display_name
                st.session_state["status"] = user_status

                st.success(f"üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö {display_name} ({user_status})")
            except Exception as e:
                st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: {e}")
        else:
            st.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö userId ‡∏à‡∏≤‡∏Å profile")


# ----------------------------
# ‚öôÔ∏è Debug Mode Configuration
# ----------------------------
# DEBUG = TRUE  # üîÅ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô False ‡∏Å‡πà‡∏≠‡∏ô deploy ‡∏à‡∏£‡∏¥‡∏á

# if DEBUG:
    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ session ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ mock ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
if "user_id" not in st.session_state:
    st.session_state["user_id"] = "Udebug123456"
    st.session_state["displayName"] = "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö TEST"
    st.session_state["pictureUrl"] = "https://i.imgur.com/1Q9Z1Zm.png"
    st.session_state["status"] = "APPROVED"
    st.info("üîß Loaded mock user session for debugging.")

# ----------------------------
# Sidebar Navigation (Dynamic)
# ----------------------------

st.sidebar.title("üìã ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å")

# Default: ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà login
base_menu = [
    "üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö LINE (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå)",
    "üìå ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°",
    "üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°",
    "üß© ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á LINE Developers"
]

# ‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ login ‡πÅ‡∏•‡πâ‡∏ß
private_menu = [
    "üñ• ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô",
    "üßæ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô",
    "üìÑ ‡∏Ç‡∏≠‡∏î‡∏π access_log ‡πÑ‡∏ü‡∏•‡πå"
]

# ‡∏£‡∏ß‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≤‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
if "user_id" in st.session_state and st.session_state.get("status") == "APPROVED":
    menu_options = private_menu + base_menu
else:
    menu_options = base_menu

# ‚úÖ ‡∏ú‡∏π‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö session_state
default_index = menu_options.index(st.session_state["menu"]) if "menu" in st.session_state else 0
st.sidebar.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π", options=menu_options, index=default_index, key="menu")
menu = st.session_state["menu"]

# ----------------------------
# ‡πÄ‡∏°‡∏ô‡∏π: ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
# ----------------------------
if menu == "üñ• ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô":
    st.title("üîê ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ LINE")
    st.page_link("pages/Call_Recording_Upload.py", label="üéôÔ∏è ‡∏£‡∏∞‡∏ö‡∏ö Call Recording Upload")
    st.page_link("pages/Chat_with_AI.py", label="ü§ñ ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á Chat with AI")

# ----------------------------
# ‡πÄ‡∏°‡∏ô‡∏π: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
# ----------------------------
elif menu == "üßæ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô":
    st.header("üìÑ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
    
    df = read_access_log_db()
    df = df.rename(columns={
        "Display Name": "displayName",
        "Picture URL": "pictureUrl",
        "Status": "status",
        "Last Updated": "updated_at"
    })
    users = df.set_index("User ID").to_dict(orient="index")
    current_user_id = st.session_state.get("user_id", "")
    current_user = users.get(current_user_id, {})
    approvers = get_approvers_db()

    # # -----------------------
    # # DEBUG: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ session ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    # # -----------------------
    # if "user_id" not in st.session_state:
    #     st.session_state["user_id"] = "Udebug123456"
    #     st.session_state["displayName"] = "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö TEST"
    #     st.session_state["pictureUrl"] = "https://i.imgur.com/1Q9Z1Zm.png"
    #     st.session_state["status"] = "APPROVED"
    #     st.info("üîß Loaded mock user session for debugging.")

    # ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
    st.subheader("üßë‚Äçüíº ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
    profile1, profile2, profile3 = st.columns([1, 4, 2])
    with profile1:
        url = current_user.get("pictureUrl", "")
        if url:
            st.image(url, width=80)
        else:
            st.warning("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå")
    with profile2:
        st.markdown(f"""
            **{current_user.get('displayName', '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠')}**  
            üÜî `{current_user_id}`
        """)
    with profile3:
        status = current_user.get("status", "PENDING")
        status_icon = "üü¢" if status == "APPROVED" else "üü°" if status == "PENDING" else "üî¥"
        st.markdown(f"**‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:** {status_icon} `{status}`")

    if current_user_id in approvers:
        st.success("‚úÖ ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô")
    

        # ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
        st.markdown("---")
        st.subheader("üßæ ‡∏ú‡∏π‡πâ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥")

        for uid, info in users.items():
            if info.get("status") == "PENDING" and uid != current_user_id:
                pend1, pend2, pend3 = st.columns([1, 4, 2])
                with pend1:
                    url = info.get("pictureUrl", "")
                    if url:
                        st.image(url, width=60)
                    else:
                        st.warning("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå")
                with pend2:
                    st.markdown(f"**{info.get('displayName')}**  \nüÜî `{uid}`  \nüìå ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: üü° `PENDING`")
                with pend3:
                    if st.button("‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥", key=f"approve_pending_{uid}"):
                        update_user_status_db(uid, "APPROVED")
                        send_message_to_user(uid, "‚úÖ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", "<REPLACE_WITH_TOKEN>")
                        st.rerun()
                    if st.button("üö´ ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò", key=f"deny_pending_{uid}"):
                        update_user_status_db(uid, "DENIED")
                        send_message_to_user(uid, "‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", "<REPLACE_WITH_TOKEN>")
                        st.rerun()

    # ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    st.markdown("---")
    st.subheader("üìã ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")

    status_emoji = {
        "APPROVED": "üü¢",
        "PENDING": "üü°",
        "DENIED": "üî¥"
    }

    for uid, info in users.items():
        display_name = info.get("displayName", "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠")
        status = info.get("status", "PENDING")
        emoji = status_emoji.get(status, "‚ö™")

        allusers1, allusers2, allusers3, = st.columns([1, 7, 2])
        with allusers1:
            url = info.get("pictureUrl", "")
            if url:
                st.image(url, width=80)
            else:
                st.warning("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå")
        with allusers2:
            st.markdown(f"""
                **{display_name}**  
                üÜî `{uid}`
            """)
        with allusers3:
            if status != "APPROVED" and current_user_id in approvers:
                if st.button("‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥", key=f"approve_all_{uid}"):
                    update_user_status_db(uid, "APPROVED")
                    st.rerun()
            if status != "DENIED" and current_user_id in approvers:
                if st.button("üö´ ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò", key=f"deny_all_{uid}"):
                    update_user_status_db(uid, "DENIED")
                    st.rerun()
            

# ----------------------------
# ‡πÄ‡∏°‡∏ô‡∏π: üìÑ ‡∏Ç‡∏≠‡∏î‡∏π access_log ‡πÑ‡∏ü‡∏•‡πå
# ----------------------------
elif menu == "üìÑ ‡∏Ç‡∏≠‡∏î‡∏π access_log ‡πÑ‡∏ü‡∏•‡πå":
    st.title("üìÑ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (access_login)")
    try:
        df = read_access_log_db()
        if df.empty:
            st.info("üîç ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
        else:
            st.dataframe(df, use_container_width=True)
    except Exception as e:
        st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ: {e}")

    st.title("üìÑ ‡∏Ç‡∏≠‡∏î‡∏π access_log.txt (‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå)")
    try:
        with open("access_log.txt", "r", encoding="utf-8") as f:
            content = f.read()
        st.text_area("üìÑ ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ access_log.txt", value=content, height=300)
    except Exception as e:
        st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î access_log.txt ‡πÑ‡∏î‡πâ: {e}")

# ----------------------------
# ‡πÄ‡∏°‡∏ô‡∏π: üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö LINE (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå)
# ----------------------------
elif menu == "üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö LINE (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå)":
    st.title("üîê ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ú‡πà‡∏≤‡∏ô LINE")

    # ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å config.py ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà ‡πÅ‡∏•‡∏∞ .env
    params = {
        "response_type": "code",
        "client_id": CHANNEL_ID,
        "redirect_uri": REDIRECT_URI,
        "state": STATE,
        "scope": "profile openid",
        "bot_prompt": "aggressive"
    }

    auth_url = f"https://access.line.me/oauth2/v2.1/authorize?{urlencode(params)}"

    # ‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á Streamlit
    st.link_button("üîó ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ LINE", auth_url)

# -------------------------
# ‡πÄ‡∏°‡∏ô‡∏π: ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
# -------------------------
elif menu == "üìå ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°":
    st.title("üìå ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
    st.markdown("""
    ‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏ú‡πà‡∏≤‡∏ô LINE ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö LIFF ‡∏´‡∏£‡∏∑‡∏≠ Web App ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢
    ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏≤ LINE User ‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥

    ### üß± ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö
    ```plaintext
    line_login_app/
    ‚îú‚îÄ‚îÄ app.py                  # üéØ ‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢ Streamlit
    ‚îú‚îÄ‚îÄ line_api.py             # üì° ‡∏£‡∏ß‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô backend ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö LINE API (login, push msg)
    ‚îú‚îÄ‚îÄ config.py               # ‚öôÔ∏è ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà ‡πÄ‡∏ä‡πà‡∏ô Channel ID, Secret, Callback URL
    ‚îú‚îÄ‚îÄ requirements.txt        # üì¶ ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á
    ```

    ### üõ† ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏´‡∏•‡∏±‡∏Å
    - ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏ú‡πà‡∏≤‡∏ô LINE OAuth2 ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    - ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏∑‡πà‡∏≠ ‡∏£‡∏π‡∏õ UserID
    - ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÑ‡∏õ‡∏ù‡∏±‡∏á‡πÉ‡∏ô LIFF ‡∏´‡∏£‡∏∑‡∏≠ Web App ‡πÑ‡∏î‡πâ
    - ‚úÖ ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á login ‡πÑ‡∏î‡πâ‡πÄ‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢ Streamlit
    - ‚úÖ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏≥‡πÑ‡∏õ‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£
    """)

# -------------------------
# ‡πÄ‡∏°‡∏ô‡∏π: ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
# -------------------------
elif menu == "üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°":
    st.title("üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°")
    st.markdown("""
    ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏â‡∏ö‡∏±‡∏ö‡∏ô‡∏µ‡πâ‡∏à‡∏±‡∏î‡∏ó‡∏≥‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ó‡∏±‡πâ‡∏á **‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ** ‡πÅ‡∏•‡∏∞ **‡∏ô‡∏±‡∏Å‡∏û‡∏±‡∏í‡∏ô‡∏≤ (Dev)**
    ‡πÉ‡∏´‡πâ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏£‡∏∞‡∏ö‡∏ö Login ‡∏î‡πâ‡∏ß‡∏¢ LINE ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á

    ### ‚öôÔ∏è ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏±‡∏Å‡∏û‡∏±‡∏í‡∏ô‡∏≤ (Dev)
    ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ LINE (‡πÄ‡∏ä‡πà‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô Channel ‡πÉ‡∏´‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏≠‡∏∑‡πà‡∏ô):

    üîê ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ü‡∏•‡πå `config.py` ‡∏ï‡∏≤‡∏°‡∏ô‡∏µ‡πâ:

    ```python
    CHANNEL_ID = "YOUR_LINE_CHANNEL_ID"
    CHANNEL_SECRET = "YOUR_LINE_CHANNEL_SECRET"
    REDIRECT_URI = "YOUR_CALLBACK_URL"
    ```

    - `CHANNEL_ID` ‡πÅ‡∏•‡∏∞ `CHANNEL_SECRET`: ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å LINE Developers Console ‡πÉ‡∏ô‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ **LINE Login**
    - `REDIRECT_URI`: ‡∏ï‡πâ‡∏≠‡∏á **‡∏ï‡∏£‡∏á‡πÄ‡∏õ‡πä‡∏∞** ‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏ß‡πâ‡πÉ‡∏ô Console ‡πÄ‡∏ä‡πà‡∏ô `https://liff.line.me/xxxx`
    - ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå `.env` ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö production ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏∏‡∏î

    ---

    ### üßæ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö (Installation Guide)

    1. **‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Python**
       ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà [python.org](https://www.python.org/downloads/)
       ‚û§ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏ä‡πâ **Python 3.10 ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ**

    2. **‡πÇ‡∏Ñ‡∏•‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ô‡∏µ‡πâ**
       ```bash
       git clone https://github.com/your-org/line-login-app.git
       cd line-login-app
       ```

    3. **‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô**
       ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:
       ```bash
       pip install -r requirements.txt
       ```

    4. **‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏î‡πâ‡∏ß‡∏¢ Streamlit**
       ```bash
       streamlit run app.py
       ```

    ---

    ### ü™ú ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö (User Guide)

    1. ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏•‡∏∞‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏°‡∏ô‡∏π **üñ• ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô**
    2. ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° **üîó ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏î‡πâ‡∏ß‡∏¢ LINE**
    3. ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏û‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô LINE (‡∏ú‡πà‡∏≤‡∏ô LIFF)
    4. ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏à‡∏∞ redirect ‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
    5. ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• User ID ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏∑‡πà‡∏ô ‡πÄ‡∏ä‡πà‡∏ô whitelist ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°

    ---

    ‚úÖ ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ù‡∏±‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô LIFF ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    """)

# -------------------------
# ‡πÄ‡∏°‡∏ô‡∏π: ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á LINE Developers
# -------------------------
elif menu == "üß© ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á LINE Developers":
    st.title("üß© ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÉ‡∏ô LINE Developers Console")
    st.markdown("""
    ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö LINE ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡πà‡∏≤‡∏ô [LINE Developers Console](https://developers.line.biz/console/channel/)

    ### 1Ô∏è‚É£ ‡πÅ‡∏ó‡πá‡∏ö Basic settings
    ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏°‡∏ô‡∏π **Basic settings** ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ:

    - **Channel ID** ‚Äì ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏ö (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: `1660782349`)
    - **Channel secret** ‚Äì ‡∏£‡∏´‡∏±‡∏™‡∏•‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏î‡∏∂‡∏á access token

    > üìù ‡∏ô‡∏≥‡∏Ñ‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏°‡∏≤‡πÉ‡∏™‡πà‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå `config.py` ‡∏´‡∏£‡∏∑‡∏≠ `.env` ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô

    ---

    ### 2Ô∏è‚É£ ‡πÅ‡∏ó‡πá‡∏ö LINE Login
    ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ **Callback URL (Redirect URI)** ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ö code ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å login ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à

    - ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ `Callback URL`
    - ‡πÄ‡∏û‡∏¥‡πà‡∏° URL ‡πÄ‡∏ä‡πà‡∏ô:
      ```
      https://liff.line.me/1660782349-xxxxxxxx
      ```
    - ‡∏ï‡πâ‡∏≠‡∏á **‡∏ï‡∏£‡∏á‡πÄ‡∏õ‡πä‡∏∞ 100%** ‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏°‡∏¥‡∏â‡∏∞‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏∞‡πÄ‡∏à‡∏≠ error `400 Bad Request`

    ---

    ### 3Ô∏è‚É£ ‡πÅ‡∏ó‡πá‡∏ö LIFF
    ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ù‡∏±‡∏á Web App ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏•‡∏á‡πÉ‡∏ô LINE:

    - ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö **LIFF**
    - ‡∏Å‡∏î `Add` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á LIFF URL ‡πÉ‡∏´‡∏°‡πà
    - ‡∏£‡∏∞‡∏ö‡∏∏:
      - `Endpoint URL` ‡πÄ‡∏ä‡πà‡∏ô `https://your-web-app.com`
      - `Size`: `Compact` / `Tall` / `Full`
    - ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á LIFF URL ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì ‡πÄ‡∏ä‡πà‡∏ô:
      ```
      https://liff.line.me/1660782349-8yPr6Q4y
      ```

    > üìå ‡∏ô‡∏≥ LIFF URL ‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô `redirect_uri` ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö login ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ

    ---

    ‚úÖ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á 3 ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
    """)

# Footer ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏î
st.markdown("""
    <hr style='margin-top: 3rem;'>
    <div style='text-align: center; color: #888; font-size: 0.9em;'>
        Provide ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ‡∏ß‡∏¥‡∏•‡∏•‡πà‡∏≤ ‡∏°‡∏≤‡∏£‡πå‡πÄ‡∏Å‡πá‡∏ï‡πÄ‡∏à‡∏û‡∏µ | ‡πÇ‡∏î‡∏¢‡∏¢‡∏π‡∏ô‡∏¥‡∏Ñ‡∏≠‡∏£‡πå‡∏ô ‡πÄ‡∏ó‡∏Ñ ‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡∏¥‡πÄ‡∏Å‡∏£‡∏ä‡∏±‡πà‡∏ô
    </div>
""", unsafe_allow_html=True)